CRUD Operations for project portal management.

1.	Projects
	a.	New Project			POST: createProject
	b.	List of projects	GET: getProjects?id=1&code=LF_PRJ
	c. 	Update Project 		PUT: updateProjectById
	d. 	Delete Project		DELETE: deleteProjectById/1

2.	Employees
	a.	New Employee		POST: createEmployee
	b.	Update Employee		PUT: updateEmployee
	c.	List of Employees	GET: getEmployees?id=1
	d.  Delete Employee		DELETE: deleteEmployeeById/1

3.	Tasks
	a.	New Task			POST: createTask
	b.	Tasks List			GET: getAllTasks
	c.	Update Task			PUT: updateTaskById
	d.	Delete Task			DELETE: deleteTaskById

4.	Bugs
	a.	List of Bugs		GET: getAllBugs
	b.	Details of Bug		GET: getBugDetails
	c.	New Bug				POST: createBug
	d.	Update Bug			PUT: updateBug

5.	Authentication
	a.	To see the details, you must be an authenticated user
	- create an application session while user-login for a 24hour default time period
	- validate user on login & do necessary exception handling
	
	b.	You should be able to see the details of the project to which you have been assigned
	- on employee login, get all his related proejcts & tasks only
	- in short th details a employee should see on his home page/dashboard
	
	c.	You should be able to filter the details of the dashboard using Start Date and End Date of Project Tasks and Bugs
	- getProjectByDate(startDate, endDate)
	- getTasksByDate(startDate, endDate)
	- getBugsByDate(startDate, endDate)

6.	Dashboard
	a.	Should display Project Specific information like Tasks, Bugs in a Chart format using High charts (Or Charts API of your choice)
	- use the 3rd party API like Charts API or any other to show some graphical representation of data

